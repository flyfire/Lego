package com.wingjay.lego;

import android.support.annotation.NonNull;
import android.text.TextUtils;
import com.wingjay.lego.inner.GlobalViewHolderMapper;

/**
 * LegoManager, init/register your IViewHolderMapper.
 *
 * @author wingjay
 * @date 2017/09/25
 */
public class LegoManager {

    /**
     * Put all your <b>apt-generated</b> ViewHolderMapper here.
     *
     * @param mapperList generated by apt.
     */
    public static void init(IViewHolderMapper... mapperList) {
        GlobalViewHolderMapper.register(mapperList);
    }

    /**
     * Register your IViewHolderMapper.
     * Better use {@link #init(IViewHolderMapper...)} when application init.
     */
    public static void registerMapper(@NonNull IViewHolderMapper mapper) {
        GlobalViewHolderMapper.register(mapper);
    }

    /**
     * Find ViewHolder class for a data.
     *
     * 1. For LegoItem:
     *      - if ViewHolderId isn't empty, we can use ViewHolderId to find from {@link GlobalViewHolderMapper};
     *      - if ViewHolderId is Empty, we use {@link LegoItem#getData()} to find.
     * 2. For nest Object, just use its class to find.
     *
     * @param data LegoItem or data object;
     * @return String ViewHolderClass name
     */
    static Class find(Object data) {
        if (data instanceof LegoItem) {
            LegoItem legoItem = (LegoItem) data;
            if (!TextUtils.isEmpty(legoItem.getViewHolderId())) {
                return GlobalViewHolderMapper.matchById(legoItem.getViewHolderId());
            } else {
                return GlobalViewHolderMapper.matchByClass(legoItem.getData().getClass());
            }
        } else {
            return GlobalViewHolderMapper.matchByClass(data.getClass());
        }
    }
}
